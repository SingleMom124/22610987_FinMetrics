group_by(date, Sector) %>%
mutate(ALSI_Exposure = sum(J203),
SWIX_Exposure = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Sector, ALSI_Exposure, SWIX_Exposure) %>%
unique() %>%
arrange(Sector)
ggarrange(ggplot() + geom_area(data = exposure, aes(x = date, y = ALSI_Exposure, fill = Sector), alpha = 0.7) + labs(x = "") + theme_bw(),
ggplot() + geom_area(data = exposure, aes(x = date, y = SWIX_Exposure, fill = Sector), alpha = 0.7) + labs(x = "") +theme_bw(),
nrow = 1, ncol = 2,
common.legend = T,
legend = "bottom")
exposure <- data %>%
group_by(date, Sector) %>%
mutate(ALSI_Exposure = sum(J203),
SWIX_Exposure = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Sector, ALSI_Exposure, SWIX_Exposure) %>%
unique() %>%
arrange(Sector)
ggarrange(ggplot() + geom_area(data = exposure, aes(x = date, y = ALSI_Exposure, fill = Sector), alpha = 0.7) + labs(x = "") + theme_bw(),
ggplot() + geom_area(data = exposure, aes(x = date, y = SWIX_Exposure, fill = Sector), alpha = 0.7) + labs(x = "") +theme_bw(),
nrow = 1, ncol = 2,
common.legend = T,
legend = "bottom")
exposure <- data %>%
group_by(date, Sector) %>%
mutate(ALSI_Exposure = sum(J203),
SWIX_Exposure = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Sector, ALSI_Exposure, SWIX_Exposure) %>%
unique() %>%
arrange(Sector)
ggarrange(ggplot() + geom_area(data = exposure, aes(x = date, y = ALSI_Exposure, fill = Sector), alpha = 0.7) + labs(x = "ALSI", y = "") + theme_bw(),
ggplot() + geom_area(data = exposure, aes(x = date, y = SWIX_Exposure, fill = Sector), alpha = 0.7) + labs(x = "SWIX", y = "") +theme_bw(),
nrow = 1, ncol = 2,
common.legend = T,
legend = "bottom")
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.CumReturns(R = .,
main = "Index size mean cumulative returns",
legend.loc = "topleft")
data %>%
dplyr::select(date, J203, J403, Index_Name) %>%
group_by(date, Index_Name) %>%
mutate(ALSI = mean(J203, na.rm = T),
SWIX = mean(J403, na.rm = T)) %>%
ungroup() %>%
dplyr::select(date, ALSI, SWIX, Index_Name) %>%
unique() %>%
pivot_longer(cols = c(-date, -Index_Name),
names_to = "Index",
values_to = "Mean") %>%
ggplot() +
geom_bar(aes(x = Index,
y = Mean,
fill = Index_Name),
stat = "identity",
position = position_dodge(width = 0.8),
width = 0.7) +
labs(title = "Grouped Bar Plot",
fill = "Size") +
theme_bw()
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.CumReturns(R = .,
main = "Index size mean cumulative returns",
legend.loc = "topleft")
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.RollingPerformance(R = .,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.CumReturns(R = .,
main = "Index size mean cumulative returns",
legend.loc = "topleft")
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.RollingPerformance(R = .,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "topleft")
View(exposure)
alsi_expo <- exposure %>%
dplyr::select(date, Sector, ALSI) %>%
tbl_xts(cols_to_xts = ALSI,
spread_by = Sector)
exposure <- data %>%
group_by(date, Sector) %>%
mutate(ALSI = sum(J203),
SWIXe = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Sector, ALSI, SWIX) %>%
unique() %>%
arrange(Sector)
exposure <- data %>%
group_by(date, Sector) %>%
mutate(ALSI = sum(J203),
SWIX = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Sector, ALSI, SWIX) %>%
unique() %>%
arrange(Sector)
alsi_expo <- exposure %>%
dplyr::select(date, Sector, ALSI) %>%
tbl_xts(cols_to_xts = ALSI,
spread_by = Sector)
PerformanceAnalytics::chart.StackedBar(w = sector_weights,
space = 0)
View(alsi_expo)
exposure <- data %>%
group_by(date, Sector) %>%
mutate(ALSI = sum(J203),
SWIX = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Sector, ALSI, SWIX) %>%
unique() %>%
arrange(Sector)
alsi_expo <- exposure %>%
dplyr::select(date, Sector, ALSI) %>%
tbl_xts(cols_to_xts = ALSI,
spread_by = Sector)
PerformanceAnalytics::chart.StackedBar(w = alsi_expo,
space = 0)
ggarrange(ggplot() + geom_area(data = exposure, aes(x = date, y = ALSI_Exposure, fill = Sector), alpha = 0.7) + labs(x = "ALSI", y = "") + theme_bw(),
ggplot() + geom_area(data = exposure, aes(x = date, y = SWIX_Exposure, fill = Sector), alpha = 0.7) + labs(x = "SWIX", y = "") +theme_bw(),
nrow = 1, ncol = 2,
common.legend = T,
legend = "bottom")
PerformanceAnalytics::chart.StackedBar(w = alsi_expo,
space = 0,
unstacked = F)
exposure <- data %>%
group_by(date, Sector) %>%
mutate(ALSI = sum(J203),
SWIX = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Sector, ALSI, SWIX) %>%
unique() %>%
arrange(Sector)
ggarrange(ggplot() + geom_area(data = exposure, aes(x = date, y = ALSI, fill = Sector), alpha = 0.7) + labs(x = "ALSI", y = "") + theme_bw(),
ggplot() + geom_area(data = exposure, aes(x = date, y = SWIX, fill = Sector), alpha = 0.7) + labs(x = "SWIX", y = "") +theme_bw(),
nrow = 1, ncol = 2,
common.legend = T,
legend = "bottom")
View(exposure)
size_exposure <- data %>%
group_by(date, Index_Name) %>%
mutate(ALSI = sum(J203),
SWIX = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Sector, ALSI, SWIX) %>%
unique() %>%
arrange(Index_Name)
size_exposure <- data %>%
group_by(date, Index_Name) %>%
mutate(ALSI = sum(J203),
SWIX = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Index_Name, ALSI, SWIX) %>%
unique() %>%
arrange(Index_Name)
View(size_exposure)
size_exposure <- data %>%
group_by(date, Index_Name) %>%
mutate(ALSI = sum(J203),
SWIX = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Index_Name, ALSI, SWIX) %>%
unique() %>%
arrange(Index_Name) %>%
mutate(Index_Name = ifelse(is.na(Index_Name), "Not Specified", Index_Name))
size_exposure <- data %>%
group_by(date, Index_Name) %>%
mutate(ALSI = sum(J203),
SWIX = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Index_Name, ALSI, SWIX) %>%
unique() %>%
arrange(Index_Name) %>%
mutate(Index_Name = ifelse(is.na(Index_Name), "Not Specified", Index_Name))
ggarrange(ggplot() + geom_area(data = size_exposure, aes(x = date, y = ALSI, fill = Sector), alpha = 0.7) + labs(x = "ALSI", y = "") + theme_bw(),
ggplot() + geom_area(data = size_exposure, aes(x = date, y = SWIX, fill = Sector), alpha = 0.7) + labs(x = "SWIX", y = "") +theme_bw(),
nrow = 1, ncol = 2,
common.legend = T,
legend = "bottom")
size_exposure <- data %>%
group_by(date, Index_Name) %>%
mutate(ALSI = sum(J203),
SWIX = sum(J403)) %>%
ungroup() %>%
dplyr::select(date, Index_Name, ALSI, SWIX) %>%
unique() %>%
arrange(Index_Name) %>%
mutate(Index_Name = ifelse(is.na(Index_Name), "Not Specified", Index_Name))
ggarrange(ggplot() + geom_area(data = size_exposure, aes(x = date, y = ALSI, fill = Index_Name), alpha = 0.7) + labs(x = "ALSI", y = "") + theme_bw(),
ggplot() + geom_area(data = size_exposure, aes(x = date, y = SWIX, fill = Index_Name), alpha = 0.7) + labs(x = "SWIX", y = "") +theme_bw(),
nrow = 1, ncol = 2,
common.legend = T,
legend = "bottom")
View(indices)
View(data)
size_exposure <- data %>%
dplyr::select(Tickers, Index_Name, Sector) %>%
unique() %>%
mutate(Index_Name = ifelse(is.na(Index_Name), "Not Specified", Index_Name))
ggplot(size_exposure, aes(x = Index_Name, fill = Sector)) +
geom_bar(stat = "identity") +
labs(title = "Stacked Bar Chart", x = "Size", y = "Count") +
theme_minimal()
ggplot(size_exposure, aes(x = Index_Name, fill = Sector)) +
geom_bar() +
labs(title = "Performance Comparison of Funds vs Benchmark",
x = "Performance Category",
y = "Number of Observations") +
theme_bw()
# Stocks by size and sector
data %>%
dplyr::select(Tickers, Index_Name, Sector) %>%
unique() %>%
mutate(Index_Name = ifelse(is.na(Index_Name), "Not Specified", Index_Name)) %>%
ggplot() +
geom_bar(aes(x = Index_Name,
fill = Sector)) +
labs(title = "Stocks by Size and Sector",
x = "Index Size",
y = "Number of Observations") +
theme_bw()
```{r echo=FALSE, message=FALSE, warning=FALSE}
# Stocks by size and sector
data %>%
dplyr::select(Tickers, Index_Name, Sector) %>%
unique() %>%
mutate(Index_Name = ifelse(is.na(Index_Name), "Not Specified", Index_Name)) %>%
ggplot() +
geom_bar(aes(x = Index_Name,
fill = Sector)) +
labs(title = "Stocks by Size and Sector",
x = "Index Size",
y = "Number of Observations") +
theme_bw()
data %>%
dplyr::select(Tickers, Index_Name, Sector) %>%
unique() %>%
mutate(Index_Name = ifelse(is.na(Index_Name), "Not Specified", Index_Name)) %>%
ggplot() +
geom_bar(aes(x = Index_Name,
fill = Sector)) +
labs(title = "Stocks by Size and Sector",
x = "Index Size",
y = "Number of Observations") +
theme_bw()
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.CumReturns(R = .,
main = "Index size mean cumulative returns",
legend.loc = "topleft")
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.RollingPerformance(R = .,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "topleft")
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.CumReturns(R = .,
main = "",
legend.loc = "topleft")
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.CumReturns(R = .,
main = "",
legend.loc = "topleft")
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.RollingPerformance(R = .,
FUN = "sd",
width = 120,
main = "",
legend.loc = "topleft")
# Prep function rebalance data
days <- read_rds("data/Rebalance_days.rds") %>%
dplyr::filter(Date_Type == "Reb Trade Day") %>%
pull(date)
rebalance <- data %>%
dplyr::filter(date %in% days) %>%
mutate(rebalance_time = format(date, "%Y%B")) %>%
dplyr::select(-Return, -Sector, -Index_Name)
ALSI_Reb <- rebalance %>%
rename(tickers = Tickers,
weight = J203) %>%
dplyr::select(-J403)
SWIX_Reb <- rebalance %>%
rename(tickers = Tickers,
weight = J403) %>%
dplyr::select(-J203)
# Prep function returns data
returns <- data %>%
dplyr::select(date, Return, Tickers) %>%
rename(return = Return,
tickers = Tickers)
ALSI_Cap1 <- indexCAP(data = returns,
rebalance = ALSI_Reb,
cap = 0.05)
colnames(ALSI_Cap1)[2] <- "ALSI 5% Cap"
ALSI_Cap2 <- indexCAP(data = returns,
rebalance = ALSI_Reb,
cap = 0.1)
colnames(ALSI_Cap2)[2] <- "ALSI 10% Cap"
SWIX_Cap1 <- indexCAP(data = returns,
rebalance = SWIX_Reb,
cap = 0.05)
colnames(SWIX_Cap1)[2] <- "SWIX 5% Cap"
SWIX_Cap2 <- indexCAP(data = returns,
rebalance = SWIX_Reb,
cap = 0.1)
colnames(SWIX_Cap2)[2] <- "SWIX 10% Cap"
capped_indices <- ALSI_Cap1 %>%
inner_join(ALSI_Cap2, by = "date") %>%
inner_join(SWIX_Cap1, by = "date") %>%
inner_join(SWIX_Cap2, by = "date") %>%
inner_join(indices, by = "date") %>%
tbl_xts()
chart.CumReturns(R = capped_indices[, c(1, 2, 5)],
main = "ALSI cumulative returns",
legend.loc = "topleft")
chart.CumReturns(R = capped_indices[, c(3, 4, 6)],
main = "SWIX cumulative returns",
legend.loc = "topleft")
View(capped_indices)
ALSI_Cap1 <- indexCAP(data = returns,
rebalance = ALSI_Reb,
cap = 0.05)
colnames(ALSI_Cap1)[2] <- "ALSI 5% Cap"
ALSI_Cap2 <- indexCAP(data = returns,
rebalance = ALSI_Reb,
cap = 0.1)
colnames(ALSI_Cap2)[2] <- "ALSI 10% Cap"
SWIX_Cap1 <- indexCAP(data = returns,
rebalance = SWIX_Reb,
cap = 0.05)
colnames(SWIX_Cap1)[2] <- "SWIX 5% Cap"
SWIX_Cap2 <- indexCAP(data = returns,
rebalance = SWIX_Reb,
cap = 0.1)
colnames(SWIX_Cap2)[2] <- "SWIX 10% Cap"
capped_indices <- ALSI_Cap1 %>%
inner_join(ALSI_Cap2, by = "date") %>%
inner_join(SWIX_Cap1, by = "date") %>%
inner_join(SWIX_Cap2, by = "date") %>%
inner_join(indices, by = "date") %>%
tbl_xts()
chart.CumReturns(R = capped_indices[, c(1, 2, 5)],
main = "ALSI cumulative returns",
legend.loc = "topleft")
chart.CumReturns(R = capped_indices[, c(3, 4, 6)],
main = "SWIX cumulative returns",
legend.loc = "topleft")
plot(PerformanceAnalytics::table.DownsideRisk(R = capped_indices,
ci = 0.95,
scale = 12)%>%
rownames_to_column(var = "Estimates") %>%
gt(caption = "Table 2"))
ALSI_Cap1 <- indexCAP(data = returns,
rebalance = ALSI_Reb,
cap = 0.05)
colnames(ALSI_Cap1)[2] <- "ALSI 5% Cap"
ALSI_Cap2 <- indexCAP(data = returns,
rebalance = ALSI_Reb,
cap = 0.1)
colnames(ALSI_Cap2)[2] <- "ALSI 10% Cap"
SWIX_Cap1 <- indexCAP(data = returns,
rebalance = SWIX_Reb,
cap = 0.05)
colnames(SWIX_Cap1)[2] <- "SWIX 5% Cap"
SWIX_Cap2 <- indexCAP(data = returns,
rebalance = SWIX_Reb,
cap = 0.1)
colnames(SWIX_Cap2)[2] <- "SWIX 10% Cap"
capped_indices <- ALSI_Cap1 %>%
inner_join(ALSI_Cap2, by = "date") %>%
inner_join(SWIX_Cap1, by = "date") %>%
inner_join(SWIX_Cap2, by = "date") %>%
inner_join(indices, by = "date") %>%
tbl_xts()
chart.CumReturns(R = capped_indices[, c(1, 2, 5)],
main = "ALSI cumulative returns",
legend.loc = "topleft")
chart.CumReturns(R = capped_indices[, c(3, 4, 6)],
main = "SWIX cumulative returns",
legend.loc = "topleft")
plot(PerformanceAnalytics::table.DownsideRisk(R = capped_indices,
ci = 0.95,
scale = 12)%>%
rownames_to_column(var = "Estimates") %>%
kable(caption = "Downside Risks"))
PerformanceAnalytics::table.DownsideRisk(R = capped_indices,
ci = 0.95,
scale = 12)%>%
rownames_to_column(var = "Estimates") %>%
kable(caption = "Downside Risks")
chart.CumReturns(R = capped_indices[, c(1, 2, 5)],
main = "",
legend.loc = "topleft")
chart.CumReturns(R = capped_indices[, c(3, 4, 6)],
main = "",
legend.loc = "topleft")
chart.CumReturns(R = capped_indices[, c(3, 4, 6)],
main = "",
legend.loc = "topleft")
data %>%
dplyr::select(date, Return, Index_Name) %>%
dplyr::filter(!is.na(Index_Name)) %>%
group_by(date, Index_Name) %>%
mutate(Perf = mean(Return)) %>%
dplyr::select(-Return) %>%
unique() %>%
pivot_wider(names_from = Index_Name,
values_from = Perf) %>%
tbl_xts() %>%
chart.RollingPerformance(R = .,
FUN = "sd",
width = 120,
main = "",
legend.loc = "topleft")
