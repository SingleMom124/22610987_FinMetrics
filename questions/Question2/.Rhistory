geom_rect(aes(xmin = 0, xmax = Inf, ymin = -Inf, ymax = 0), fill = "yellow", alpha = 0.002) +
geom_point(color = "darkblue",
alpha = 0.5) +
geom_smooth(method = "lm",
color = "darkgrey",
se = F) +
geom_hline(yintercept = 0,
color = "black",
linetype = "dashed",
size = 0.5) +
geom_vline(xintercept = 0,
color = "black",
linetype = "dotted",
size = 0.5) +
labs(x = "60-40 Global (USD Returns",
y = "USD-ZAR Returns") +
theme_bw()
plot
# Estimate the weights of the index according to specifications
weights <- data.frame(Index = colnames(indices)[sapply(indices, is.numeric)],
Weights = c(0.6 * 0.3, 0.4 * 0.3, 0.6 * 0.7, 0.4 * 0.7))
# Estimating an hedged index
# Hedged indices are those that do not account for rand exposure, so we do nothing to these indices
hedged_indices <- indices
hedged_port <- estimatePORT(data = hedged_indices,
size = 1000,
months = c(1, 4, 7, 10),
weights = weights)
# Now estimating as un-hedged portfolio
# Need to control USD returns for currency effects, do this by adding the change in the rand to the USD indices
unhedged_indices <- indices %>%
inner_join(zar, by = "date") %>%
mutate(MSCI_ACWI = MSCI_ACWI + fx_change,
Bbg_Agg = Bbg_Agg + fx_change) %>%
dplyr::select(-fx_change, -value)
unhedged_port <- estimatePORT(data = unhedged_indices,
size = 1000,
months = c(1, 4, 7, 10),
weights = weights)
# Annualized returns
us_hedged_annual_ret <- us_hedged_port %>%
dplyr::select(date, portfolio) %>%
tbl_xts() %>%
Return.annualized(R = .,
scale = 12) %>%
data.frame()
hedged_annual_ret <- hedged_port$returns %>%
xts_tbl() %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
Return.annualized(R = .,
scale = 12) %>%
data.frame()
unhedged_annual_ret <- unhedged_port$returns %>%
xts_tbl() %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
Return.annualized(R = .,
scale = 12) %>%
data.frame()
# Annualized SD
hedged_annual_sd <- hedged_port$returns %>%
sd.annualized(x = .,
scale = 12)
unhedged_annual_sd <- unhedged_port$returns %>%
sd.annualized(x = .,
scale = 12)
us_hedged_annual_sd <- us_hedged_port %>%
dplyr::select(date, portfolio) %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
sd.annualized(x = .,
scale = 12)
# Putting all into a table
port_comp <- data.frame(Fund = c("Global (USD Returns: Hedged","Global + Local (Hedged)", "Global + Local (Unhedged"),
"Returns Ann." = c(us_hedged_annual_ret$portfolio, hedged_annual_ret$portfolio.returns, unhedged_annual_ret$portfolio.returns),
"Std Ann." = c(us_hedged_annual_sd, hedged_annual_sd, unhedged_annual_sd))
library(huxtable)
huxtable::hux(port_comp) %>%
set_all_padding(4) %>%
set_outer_padding(2) %>%
set_number_format(value = 4) %>%
set_bold(row = 1, col = everywhere) %>%
set_bottom_border(row = 1, col = everywhere) %>%
set_width(0.5) %>%
set_caption("")
library(gt)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
uhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates")) %>%
fmt_percent(columns = 2:3,
decimals = 2)
library(gt)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates")) %>%
fmt_percent(columns = 2:3,
decimals = 2)
hedged_port$returns
hedged_port$returns %>% xts_tbl()
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date")
View(downside_table)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0)
library(gt)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
data.frame() %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates")) %>%
fmt_percent(columns = 2:3,
decimals = 2)
library(gt)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
data.frame() %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates"))
downside_table
# Suppose I am only interested in specific elements of the table, then use:
downside_table <- downside_table[c(1,5,7,8:11),]
downside_table
library(gt)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
data.frame() %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates"))
downside_table <- downside_table[c(1,5,7,8:11),]
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
tbl_xts()
View(downside_table)
downside_table <- PerformanceAnalytics::table.DownsideRisk(R = downside_table,
ci = 0.95,
Rf = 0,
MAR = 0)
View(downside_table)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
data.frame() %>%
rownames_to_column()
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates"))
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
data.frame() %>%
rownames_to_column() %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates"))
downside_table <- downside_table[c(1,5,7,8:11),]
View(downside_table)
library(gt)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
data.frame() %>%
rownames_to_column()
downside_table <- downside_table[c(1,5,7,8:11),] %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates"))
downside_table
library(gt)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
data.frame() %>%
rownames_to_column()
downside_table <- downside_table[c(1,5,7,8:11),] %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates"))
plot(downside_table)
library(gt)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
data.frame() %>%
rownames_to_column()
downside_table[c(1,5,7,8:11),] %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates"))
library(gt)
downside_table <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
PerformanceAnalytics::table.DownsideRisk(R = .,
ci = 0.95,
Rf = 0,
MAR = 0) %>%
data.frame() %>%
rownames_to_column()
downside_table[c(1,5,7,8:11),] %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates")) %>%
fmt_percent(columns = 2:3,
decimals = 2)
library(gt)
portfolios <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
downside_table <- PerformanceAnalytics::table.DownsideRisk(R = portfolios,
ci = 0.95,
Rf = 0,
MAR = 0) %>% data.frame() %>%
rownames_to_column()
library(gt)
portfolios <- left_join(hedged_port$returns %>% xts_tbl() %>% rename("Hedged" = portfolio.returns),
unhedged_port$returns %>% xts_tbl() %>% rename("Unhedged" = portfolio.returns),
by = "date") %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts()
downside_table <- PerformanceAnalytics::table.DownsideRisk(R = portfolios,
ci = 0.95,
Rf = 0,
MAR = 0) %>% data.frame() %>%
rownames_to_column()
downside_table[c(1,5,7,8:11),] %>%
gt() %>%
tab_header(title = glue::glue("Downside Risk estimates")) %>%
fmt_percent(columns = 2:3,
decimals = 2)
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
View(portfolios)
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
chart.CumReturns(R = portfolios,
width = 120,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("blue", "orange"))
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
chart.CumReturns(R = portfolios,
width = 120,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("blue", "orange"))
chart.Drawdown(R = portfolios,
width = 120,
main = "Portfolios drawdowns",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
chart.CumReturns(R = portfolios,
width = 120,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("blue", "orange"))
chart.Drawdown(R = portfolios,
width = 120,
main = "Portfolios drawdowns",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
chart.RollingRegression(Ra = portfolios,
Rb = benchmark_data,
width=120,
attribute = c("Beta"),
legend.loc = "topleft")
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
chart.CumReturns(R = portfolios,
width = 120,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("blue", "orange"))
rrr <- chart.Drawdown(R = portfolios,
width = 120,
main = "Portfolios drawdowns",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
View(rrr)
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
chart.CumReturns(R = portfolios,
width = 120,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("blue", "orange"))
chart.Drawdown(R = portfolios,
width = 120,
main = "Portfolios drawdowns",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 120,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
chart.CumReturns(R = portfolios,
width = 120,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("blue", "orange"))
chart.Drawdown(R = portfolios,
width = 30,
main = "Portfolios drawdowns",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 30,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
chart.CumReturns(R = portfolios,
width = 120,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("blue", "orange"))
chart.Drawdown(R = portfolios,
width = 120,
main = "Portfolios drawdowns",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 4,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
chart.CumReturns(R = portfolios,
width = 4,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("blue", "orange"))
chart.Drawdown(R = portfolios,
width = 4,
main = "Portfolios drawdowns",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 12,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft")
chart.CumReturns(R = portfolios,
width = 12,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("blue", "orange"))
chart.Drawdown(R = portfolios,
width = 12,
main = "Portfolios drawdowns",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
chart.RollingPerformance(R = portfolios,
FUN = "sd",
width = 12,
main = "Rolling 120 day Standard Deviation",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
chart.CumReturns(R = portfolios,
width = 12,
main = "Portfolios cumulative returns",
legend.loc = "topleft",
colorset = c("steelblue", "orange"))
chart.Drawdown(R = portfolios,
width = 12,
main = "Portfolios drawdowns",
legend.loc = "bottomleft",
colorset = c("steelblue", "orange"))
port_comp_table %>%
gt() %>%
tab_header(title = glue::glue("Portfolio Comparisons")) %>%
fmt_percent(columns = 2:3,
decimals = 2)
port_comp_table <- data.frame(Fund = c("Global (USD Returns: Hedged","Global + Local (Hedged)", "Global + Local (Unhedged"),
"Returns Ann." = c(us_hedged_annual_ret$portfolio, hedged_annual_ret$portfolio.returns, unhedged_annual_ret$portfolio.returns),
"Std Ann." = c(us_hedged_annual_sd, hedged_annual_sd, unhedged_annual_sd))
port_comp_table %>%
gt() %>%
tab_header(title = glue::glue("Portfolio Comparisons")) %>%
fmt_percent(columns = 2:3,
decimals = 2)
# Annualized returns
us_hedged_annual_ret <- us_hedged_port %>%
dplyr::select(date, portfolio) %>%
tbl_xts() %>%
Return.annualized(R = .,
scale = 12) %>%
data.frame()
hedged_annual_ret <- hedged_port$returns %>%
xts_tbl() %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
Return.annualized(R = .,
scale = 12) %>%
data.frame()
unhedged_annual_ret <- unhedged_port$returns %>%
xts_tbl() %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
Return.annualized(R = .,
scale = 12) %>%
data.frame()
# Annualized SD
hedged_annual_sd <- hedged_port$returns %>%
sd.annualized(x = .,
scale = 12)
unhedged_annual_sd <- unhedged_port$returns %>%
sd.annualized(x = .,
scale = 12)
us_hedged_annual_sd <- us_hedged_port %>%
dplyr::select(date, portfolio) %>%
filter(date >= ymd(20041201) & date <= ymd(20221201)) %>%
tbl_xts() %>%
sd.annualized(x = .,
scale = 12)
# Putting all into a table
port_comp_table <- data.frame(Fund = c("Global (USD Returns: Hedged","Global + Local (Hedged)", "Global + Local (Unhedged"),
"Returns Ann." = c(us_hedged_annual_ret$portfolio, hedged_annual_ret$portfolio.returns, unhedged_annual_ret$portfolio.returns),
"Std Ann." = c(us_hedged_annual_sd, hedged_annual_sd, unhedged_annual_sd))
port_comp_table %>%
gt() %>%
tab_header(title = glue::glue("Fund Performance")) %>%
fmt_percent(columns = 2:3,
decimals = 2)
